"use strict";(self.webpackChunkmichelson_sdk_docs=self.webpackChunkmichelson_sdk_docs||[]).push([[370],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(h,i(i({ref:n},d),{},{components:t})):r.createElement(h,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4265:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={},c="Using with Taquito",l={unversionedId:"taquito",id:"taquito",title:"Using with Taquito",description:"Install dependencies",source:"@site/docs/taquito.md",sourceDirName:".",slug:"/taquito",permalink:"/michelson-sdk/taquito",editUrl:"https://github.com/RomarQ/michelson-sdk/tree/main/documentation/docs/taquito.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"FA2 Interface",permalink:"/michelson-sdk/FA2"},next:{title:"Using with ConseilJS",permalink:"/michelson-sdk/conseiljs"}},d=[{value:"Install dependencies",id:"install-dependencies",children:[],level:2},{value:"Interact with an FA2 contract",id:"interact-with-an-fa2-contract",children:[{value:"transfer",id:"transfer",children:[],level:3},{value:"balance_of",id:"balance_of",children:[],level:3},{value:"update_operators",id:"update_operators",children:[],level:3}],level:2}],p={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-with-taquito"},"Using with Taquito"),(0,a.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @tezwell/michelson-sdk @taquito/taquito @taquito/signer\n")),(0,a.kt)("h2",{id:"interact-with-an-fa2-contract"},"Interact with an FA2 contract"),(0,a.kt)("h3",{id:"transfer"},"transfer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { TezosToolkit } from '@taquito/taquito';\nimport { InMemorySigner } from '@taquito/signer';\nimport { Record, Address, List, Nat } from '@tezwell/michelson-sdk/literal';\n\nconst Tezos = new TezosToolkit('https://ithacanet.visualtez.com');\n\nTezos.setProvider({\n  signer: new InMemorySigner('edskS83aZUK3ijLrW5tTs1sDY3qLjSsMGyebKKLWP4RXSBh4LCivG2s1TezyZB5rEvvdqepXMg1MLcfBhS8VSJESN7L27hDpsX')\n});\n\nconst parameters = List(\n    [\n        Record({\n            from_: Address(\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\"),\n            txs: List(\n                [\n                    Record({\n                        to_: Address(\"KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF\"),\n                        token_id: Nat(0),\n                        amount: Nat(10),\n                    })\n                ]\n            ),\n        })\n    ]\n).toJSON();\n\nTezos.contract.transfer({\n    to: \"KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF\",\n    amount: 0,\n    parameter: {\n        entrypoint: \"transfer\",\n        value: parameters\n    },\n})\n.then((op) => {\n    console.log(`Waiting for ${op.hash} to be confirmed...`);\n    return op.confirmation(1).then(() => op.hash);\n})\n.then((hash) => console.log(\"Operation injected: \", hash))\n.catch((error) => console.log(`Error: ${error} ${JSON.stringify(error, null, 2)}`));\n")),(0,a.kt)("h3",{id:"balance_of"},"balance_of"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { TezosToolkit } from \'@taquito/taquito\';\nimport { InMemorySigner } from \'@taquito/signer\';\nimport { Record, Address, List, Nat, Contract } from \'@tezwell/michelson-sdk/literal\';\n\nconst Tezos = new TezosToolkit(\'https://ithacanet.visualtez.com\');\n\nTezos.setProvider({\n  signer: new InMemorySigner(\'edskS83aZUK3ijLrW5tTs1sDY3qLjSsMGyebKKLWP4RXSBh4LCivG2s1TezyZB5rEvvdqepXMg1MLcfBhS8VSJESN7L27hDpsX\')\n});\n\nconst parameters = Record({\n    requests: List(\n        [\n            Record({\n                owner: Address("KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF"),\n                token_id: Nat(0)\n            }),\n            Record({\n                owner: Address("tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN"),\n                token_id: Nat(0)\n            })\n        ]\n    ),\n    callback: Contract("KT1SiSomCunxkq3g7vQKYpPpWBHodhH5pJkU", "receive_balances")\n}).toJSON();\n\nTezos.contract.transfer({\n    to: "KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF",\n    amount: 0,\n    parameter: {\n        entrypoint: "balance_of",\n        value: parameters\n    },\n})\n.then((op) => {\n    console.log(`Waiting for ${op.hash} to be confirmed...`);\n    return op.confirmation(1).then(() => op.hash);\n})\n.then((hash) => console.log("Operation injected: ", hash))\n.catch((error) => console.log(`Error: ${error} ${JSON.stringify(error, null, 2)}`));\n')),(0,a.kt)("h3",{id:"update_operators"},"update_operators"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { TezosToolkit } from \'@taquito/taquito\';\nimport { InMemorySigner } from \'@taquito/signer\';\nimport { Record, Address, List, Nat, Variant } from \'@tezwell/michelson-sdk/literal\';\nimport { TRecord, TAddress, TNat, TVariant } from \'@tezwell/michelson-sdk/type\';\n\nconst Tezos = new TezosToolkit(\'https://ithacanet.visualtez.com\');\n\nTezos.setProvider({\n  signer: new InMemorySigner(\'edskS83aZUK3ijLrW5tTs1sDY3qLjSsMGyebKKLWP4RXSBh4LCivG2s1TezyZB5rEvvdqepXMg1MLcfBhS8VSJESN7L27hDpsX\')\n});\n\nconst VariantType = TVariant({\n    add_operator: TRecord({\n        owner: TAddress(),\n        operator: TAddress(),\n        token_id: TNat(),\n    }),\n    remove_operator: TRecord({\n        owner: TAddress(),\n        operator: TAddress(),\n        token_id: TNat(),\n    })\n});\nconst parameters = List(\n    [\n        Variant(\n            "add_operator",\n            Record({\n                owner: Address("tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN"),\n                operator: Address("KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF"),\n                token_id: Nat(0),\n            }),\n            VariantType\n        ),\n        Variant(\n            "remove_operator",\n            Record({\n                owner: Address("tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN"),\n                operator: Address("KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF"),\n                token_id: Nat(0),\n            }),\n            VariantType\n        )\n    ]\n).toJSON();\n\nTezos.contract.transfer({\n    to: "KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF",\n    amount: 0,\n    parameter: {\n        entrypoint: "update_operators",\n        value: parameters\n    },\n})\n.then((op) => {\n    console.log(`Waiting for ${op.hash} to be confirmed...`);\n    return op.confirmation(1).then(() => op.hash);\n})\n.then((hash) => console.log("Operation injected: ", hash))\n.catch((error) => console.log(`Error: ${error} ${JSON.stringify(error, null, 2)}`));\n')))}u.isMDXComponent=!0}}]);