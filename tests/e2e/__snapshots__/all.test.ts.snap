// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[E2E] - Artificial types record 1`] = `
Array [
  "storage unit;
parameter (pair (nat %field1) (pair (int %field2) (bytes %field3)));
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "annots": Array [
                "%field1",
              ],
              "prim": "nat",
            },
            Object {
              "args": Array [
                Object {
                  "annots": Array [
                    "%field2",
                  ],
                  "prim": "int",
                },
                Object {
                  "annots": Array [
                    "%field3",
                  ],
                  "prim": "bytes",
                },
              ],
              "prim": "pair",
            },
          ],
          "prim": "pair",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Artificial types variant 1`] = `
Array [
  "storage unit;
parameter (or (nat %branch1) (or (int %branch2) (bytes %branch3)));
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "annots": Array [
                "%branch1",
              ],
              "prim": "nat",
            },
            Object {
              "args": Array [
                Object {
                  "annots": Array [
                    "%branch2",
                  ],
                  "prim": "int",
                },
                Object {
                  "annots": Array [
                    "%branch3",
                  ],
                  "prim": "bytes",
                },
              ],
              "prim": "or",
            },
          ],
          "prim": "or",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Lambda) Lambda 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (lambda nat (lambda nat bool)) {
  DROP;
  LAMBDA nat bool 
  {
    DROP;
    PUSH bool True;
  };
};
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "prim": "nat",
                      },
                      Object {
                        "prim": "bool",
                      },
                    ],
                    "prim": "lambda",
                  },
                ],
                "prim": "lambda",
              },
              Array [
                Object {
                  "prim": "DROP",
                },
                Object {
                  "args": Array [
                    Object {
                      "prim": "nat",
                    },
                    Object {
                      "prim": "bool",
                    },
                    Array [
                      Object {
                        "prim": "DROP",
                      },
                      Object {
                        "args": Array [
                          Object {
                            "prim": "bool",
                          },
                          Object {
                            "prim": "True",
                          },
                        ],
                        "prim": "PUSH",
                      },
                    ],
                  ],
                  "prim": "LAMBDA",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Lambda) Lambda with IF control 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (lambda bool unit) {
  IF 
  {
    PUSH unit Unit;
  } 
  {
    PUSH unit Unit;
  };
};
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "bool",
                  },
                  Object {
                    "prim": "unit",
                  },
                ],
                "prim": "lambda",
              },
              Array [
                Object {
                  "args": Array [
                    Array [
                      Object {
                        "args": Array [
                          Object {
                            "prim": "unit",
                          },
                          Object {
                            "prim": "Unit",
                          },
                        ],
                        "prim": "PUSH",
                      },
                    ],
                    Array [
                      Object {
                        "args": Array [
                          Object {
                            "prim": "unit",
                          },
                          Object {
                            "prim": "Unit",
                          },
                        ],
                        "prim": "PUSH",
                      },
                    ],
                  ],
                  "prim": "IF",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (List) Complex list 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) { Pair \\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\" { Pair \\"KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF\\" (Pair 0 10) } };
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%from_",
                        ],
                        "prim": "address",
                      },
                      Object {
                        "annots": Array [
                          "%txs",
                        ],
                        "args": Array [
                          Object {
                            "args": Array [
                              Object {
                                "annots": Array [
                                  "%to_",
                                ],
                                "prim": "address",
                              },
                              Object {
                                "args": Array [
                                  Object {
                                    "annots": Array [
                                      "%token_id",
                                    ],
                                    "prim": "nat",
                                  },
                                  Object {
                                    "annots": Array [
                                      "%amount",
                                    ],
                                    "prim": "nat",
                                  },
                                ],
                                "prim": "pair",
                              },
                            ],
                            "prim": "pair",
                          },
                        ],
                        "prim": "list",
                      },
                    ],
                    "prim": "pair",
                  },
                ],
                "prim": "list",
              },
              Array [
                Object {
                  "args": Array [
                    Object {
                      "string": "tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN",
                    },
                    Array [
                      Object {
                        "args": Array [
                          Object {
                            "string": "KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF",
                          },
                          Object {
                            "args": Array [
                              Object {
                                "int": "0",
                              },
                              Object {
                                "int": "10",
                              },
                            ],
                            "prim": "Pair",
                          },
                        ],
                        "prim": "Pair",
                      },
                    ],
                  ],
                  "prim": "Pair",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (List) List 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (list nat) { 1 ; 2 };
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                ],
                "prim": "list",
              },
              Array [
                Object {
                  "int": "1",
                },
                Object {
                  "int": "2",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (List) Set 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (set nat) { 1 ; 2 };
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                ],
                "prim": "set",
              },
              Array [
                Object {
                  "int": "1",
                },
                Object {
                  "int": "2",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Maps) Big Map 1`] = `
Array [
  Object {
    "args": Array [
      Object {
        "string": "KEY1",
      },
      Object {
        "int": "1",
      },
    ],
    "prim": "Elt",
  },
  Object {
    "args": Array [
      Object {
        "string": "KEY2",
      },
      Object {
        "int": "2",
      },
    ],
    "prim": "Elt",
  },
]
`;

exports[`[E2E] - Michelson compilation (Maps) Complex map 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (map nat (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) { Elt 1 (Pair \\"tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN\\" { Pair \\"KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF\\" (Pair 0 10) }) };
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%from_",
                        ],
                        "prim": "address",
                      },
                      Object {
                        "annots": Array [
                          "%txs",
                        ],
                        "args": Array [
                          Object {
                            "args": Array [
                              Object {
                                "annots": Array [
                                  "%to_",
                                ],
                                "prim": "address",
                              },
                              Object {
                                "args": Array [
                                  Object {
                                    "annots": Array [
                                      "%token_id",
                                    ],
                                    "prim": "nat",
                                  },
                                  Object {
                                    "annots": Array [
                                      "%amount",
                                    ],
                                    "prim": "nat",
                                  },
                                ],
                                "prim": "pair",
                              },
                            ],
                            "prim": "pair",
                          },
                        ],
                        "prim": "list",
                      },
                    ],
                    "prim": "pair",
                  },
                ],
                "prim": "map",
              },
              Array [
                Object {
                  "args": Array [
                    Object {
                      "int": "1",
                    },
                    Object {
                      "args": Array [
                        Object {
                          "string": "tz1gTnKMA65qaKVpp6x4cgMLU2UyKF2zjHYN",
                        },
                        Array [
                          Object {
                            "args": Array [
                              Object {
                                "string": "KT1JehYdejjvFf1BqdXzTPt1QWqqSd3xS4JF",
                              },
                              Object {
                                "args": Array [
                                  Object {
                                    "int": "0",
                                  },
                                  Object {
                                    "int": "10",
                                  },
                                ],
                                "prim": "Pair",
                              },
                            ],
                            "prim": "Pair",
                          },
                        ],
                      ],
                      "prim": "Pair",
                    },
                  ],
                  "prim": "Elt",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Maps) Map 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (map nat string) { Elt 1 \\"VALUE1\\" ; Elt 2 \\"VALUE2\\" };
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                  Object {
                    "prim": "string",
                  },
                ],
                "prim": "map",
              },
              Array [
                Object {
                  "args": Array [
                    Object {
                      "int": "1",
                    },
                    Object {
                      "string": "VALUE1",
                    },
                  ],
                  "prim": "Elt",
                },
                Object {
                  "args": Array [
                    Object {
                      "int": "2",
                    },
                    Object {
                      "string": "VALUE2",
                    },
                  ],
                  "prim": "Elt",
                },
              ],
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Option) None 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (option nat) None;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                ],
                "prim": "option",
              },
              Object {
                "prim": "None",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Option) Some 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (option nat) (Some 1);
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                ],
                "prim": "option",
              },
              Object {
                "args": Array [
                  Object {
                    "int": "1",
                  },
                ],
                "prim": "Some",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Pair) Nested 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (pair nat (pair nat (pair bool string))) (Pair 1 (Pair 1 (Pair False \\"Test\\")));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "prim": "nat",
                      },
                      Object {
                        "args": Array [
                          Object {
                            "prim": "bool",
                          },
                          Object {
                            "prim": "string",
                          },
                        ],
                        "prim": "pair",
                      },
                    ],
                    "prim": "pair",
                  },
                ],
                "prim": "pair",
              },
              Object {
                "args": Array [
                  Object {
                    "int": "1",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "int": "1",
                      },
                      Object {
                        "args": Array [
                          Object {
                            "prim": "False",
                          },
                          Object {
                            "string": "Test",
                          },
                        ],
                        "prim": "Pair",
                      },
                    ],
                    "prim": "Pair",
                  },
                ],
                "prim": "Pair",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Pair) Simple 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (pair nat unit) (Pair 1 Unit);
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "nat",
                  },
                  Object {
                    "prim": "unit",
                  },
                ],
                "prim": "pair",
              },
              Object {
                "args": Array [
                  Object {
                    "int": "1",
                  },
                  Object {
                    "prim": "Unit",
                  },
                ],
                "prim": "Pair",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Record) Balanced Layout 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (pair (pair (nat %field1) (nat %field2)) (pair (nat %field3) (nat %field4))) (Pair (Pair 1 2) (Pair 3 4));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%field1",
                        ],
                        "prim": "nat",
                      },
                      Object {
                        "annots": Array [
                          "%field2",
                        ],
                        "prim": "nat",
                      },
                    ],
                    "prim": "pair",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%field3",
                        ],
                        "prim": "nat",
                      },
                      Object {
                        "annots": Array [
                          "%field4",
                        ],
                        "prim": "nat",
                      },
                    ],
                    "prim": "pair",
                  },
                ],
                "prim": "pair",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "int": "1",
                      },
                      Object {
                        "int": "2",
                      },
                    ],
                    "prim": "Pair",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "int": "3",
                      },
                      Object {
                        "int": "4",
                      },
                    ],
                    "prim": "Pair",
                  },
                ],
                "prim": "Pair",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Record) Left Comb Layout 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (pair (pair (nat %field1) (nat %field2)) (nat %field3)) (Pair (Pair 1 2) 3);
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%field1",
                        ],
                        "prim": "nat",
                      },
                      Object {
                        "annots": Array [
                          "%field2",
                        ],
                        "prim": "nat",
                      },
                    ],
                    "prim": "pair",
                  },
                  Object {
                    "annots": Array [
                      "%field3",
                    ],
                    "prim": "nat",
                  },
                ],
                "prim": "pair",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "int": "1",
                      },
                      Object {
                        "int": "2",
                      },
                    ],
                    "prim": "Pair",
                  },
                  Object {
                    "int": "3",
                  },
                ],
                "prim": "Pair",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Record) Right Comb Layout 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (pair (nat %field1) (pair (nat %field2) (nat %field3))) (Pair 1 (Pair 2 3));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "annots": Array [
                      "%field1",
                    ],
                    "prim": "nat",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%field2",
                        ],
                        "prim": "nat",
                      },
                      Object {
                        "annots": Array [
                          "%field3",
                        ],
                        "prim": "nat",
                      },
                    ],
                    "prim": "pair",
                  },
                ],
                "prim": "pair",
              },
              Object {
                "args": Array [
                  Object {
                    "int": "1",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "int": "2",
                      },
                      Object {
                        "int": "3",
                      },
                    ],
                    "prim": "Pair",
                  },
                ],
                "prim": "Pair",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Address 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH address \\"tz28QJHLyqvaY2rXAoFZTbxrXeD88NA8wscC\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "address",
              },
              Object {
                "string": "tz28QJHLyqvaY2rXAoFZTbxrXeD88NA8wscC",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bls12_381_fr (bytes) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bls12_381_fr 0x0001;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bls12_381_fr",
              },
              Object {
                "bytes": "0001",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bls12_381_fr (number) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bls12_381_fr 1;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bls12_381_fr",
              },
              Object {
                "int": "1",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bls12_381_g1 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bls12_381_g1 0x0572cbea904d67468808c8eb50a9450c9721db309128012543902d0ac358a62ae28f75bb8f1c7c42c39a8c5529bf0f4e166a9d8cabc673a322fda673779d8e3822ba3ecb8670e461f73bb9021d5fd76a4c56d9d4cd16bd1bba86881979749d28;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bls12_381_g1",
              },
              Object {
                "bytes": "0572cbea904d67468808c8eb50a9450c9721db309128012543902d0ac358a62ae28f75bb8f1c7c42c39a8c5529bf0f4e166a9d8cabc673a322fda673779d8e3822ba3ecb8670e461f73bb9021d5fd76a4c56d9d4cd16bd1bba86881979749d28",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bls12_381_g2 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bls12_381_g2 0x13e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb813fa4d4a0ad8b1ce186ed5061789213d993923066dddaf1040bc3ff59f825c78df74f2d75467e25e0f55f8a00fa030ed0d1b3cc2c7027888be51d9ef691d77bcb679afda66c73f17f9ee3837a55024f78c71363275a75d75d86bab79f74782aa;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bls12_381_g2",
              },
              Object {
                "bytes": "13e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb813fa4d4a0ad8b1ce186ed5061789213d993923066dddaf1040bc3ff59f825c78df74f2d75467e25e0f55f8a00fa030ed0d1b3cc2c7027888be51d9ef691d77bcb679afda66c73f17f9ee3837a55024f78c71363275a75d75d86bab79f74782aa",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bool (False) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bool False;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bool",
              },
              Object {
                "prim": "False",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bool (True) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bool True;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bool",
              },
              Object {
                "prim": "True",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Bytes 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH bytes 0xFFFF;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "bytes",
              },
              Object {
                "bytes": "ffff",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) ChainID (bytes) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH chain_id 0x7a06a770;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "chain_id",
              },
              Object {
                "bytes": "7a06a770",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) ChainID (string) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH chain_id \\"NetXynUjJNZm7wi\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "chain_id",
              },
              Object {
                "string": "NetXynUjJNZm7wi",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Int 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH int 2;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "int",
              },
              Object {
                "int": "2",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Key 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH key \\"edpku3g7CeTEvSKhxipD4Q2B6EiEP8cR323u8PFmGFgKRVRvCneEmT\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "key",
              },
              Object {
                "string": "edpku3g7CeTEvSKhxipD4Q2B6EiEP8cR323u8PFmGFgKRVRvCneEmT",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Key hash 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH key_hash \\"tz28QJHLyqvaY2rXAoFZTbxrXeD88NA8wscC\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "key_hash",
              },
              Object {
                "string": "tz28QJHLyqvaY2rXAoFZTbxrXeD88NA8wscC",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Mutez 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH mutez 10;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "mutez",
              },
              Object {
                "int": "10",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Nat 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH nat 1;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "nat",
              },
              Object {
                "int": "1",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Signature 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH signature \\"sigsAujsNePapNNGsVotTvcKWMNNJja9B4a2FfAe8vExzFhEgEo1GTQStiif22uSA6iNxPGCGsXsRyeLHzeLbJL2y8CnYuNe\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "signature",
              },
              Object {
                "string": "sigsAujsNePapNNGsVotTvcKWMNNJja9B4a2FfAe8vExzFhEgEo1GTQStiif22uSA6iNxPGCGsXsRyeLHzeLbJL2y8CnYuNe",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) String 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH string \\"Hello World\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "string",
              },
              Object {
                "string": "Hello World",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Timestamp (number) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH timestamp 1571659294;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "timestamp",
              },
              Object {
                "int": "1571659294",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Timestamp (string) 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH timestamp \\"2019-09-26T10:59:51Z\\";
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "timestamp",
              },
              Object {
                "string": "2019-09-26T10:59:51Z",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Singleton Literals) Unit 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH unit Unit;
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "prim": "unit",
              },
              Object {
                "prim": "Unit",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Balanced Layout 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or (or (nat %match1) (bytes %match2)) (or (int %match3) (string %match4))) (Right (Left 1));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%match1",
                        ],
                        "prim": "nat",
                      },
                      Object {
                        "annots": Array [
                          "%match2",
                        ],
                        "prim": "bytes",
                      },
                    ],
                    "prim": "or",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%match3",
                        ],
                        "prim": "int",
                      },
                      Object {
                        "annots": Array [
                          "%match4",
                        ],
                        "prim": "string",
                      },
                    ],
                    "prim": "or",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "int": "1",
                      },
                    ],
                    "prim": "Left",
                  },
                ],
                "prim": "Right",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Left 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or bytes bool) (Left 0x00);
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "bytes",
                  },
                  Object {
                    "prim": "bool",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "bytes": "00",
                  },
                ],
                "prim": "Left",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Left Comb Layout 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or (or (nat %match1) (bytes %match2)) (int %match3)) (Left (Right 0x00));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%match1",
                        ],
                        "prim": "nat",
                      },
                      Object {
                        "annots": Array [
                          "%match2",
                        ],
                        "prim": "bytes",
                      },
                    ],
                    "prim": "or",
                  },
                  Object {
                    "annots": Array [
                      "%match3",
                    ],
                    "prim": "int",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "bytes": "00",
                      },
                    ],
                    "prim": "Right",
                  },
                ],
                "prim": "Left",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Right 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or bytes bool) (Right True);
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "bytes",
                  },
                  Object {
                    "prim": "bool",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "prim": "True",
                  },
                ],
                "prim": "Right",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Right Comb Layout 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or (nat %match1) (or (bytes %match2) (int %match3))) (Right (Right 1));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "annots": Array [
                      "%match1",
                    ],
                    "prim": "nat",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "annots": Array [
                          "%match2",
                        ],
                        "prim": "bytes",
                      },
                      Object {
                        "annots": Array [
                          "%match3",
                        ],
                        "prim": "int",
                      },
                    ],
                    "prim": "or",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "int": "1",
                      },
                    ],
                    "prim": "Right",
                  },
                ],
                "prim": "Right",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Right Left 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or bytes (or bytes bool)) (Right (Left 0x00));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "bytes",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "prim": "bytes",
                      },
                      Object {
                        "prim": "bool",
                      },
                    ],
                    "prim": "or",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "bytes": "00",
                      },
                    ],
                    "prim": "Left",
                  },
                ],
                "prim": "Right",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson compilation (Variant) Right Right 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  PUSH (or bytes (or bytes bool)) (Right (Right True));
  DROP;
  CAR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {
                    "prim": "bytes",
                  },
                  Object {
                    "args": Array [
                      Object {
                        "prim": "bytes",
                      },
                      Object {
                        "prim": "bool",
                      },
                    ],
                    "prim": "or",
                  },
                ],
                "prim": "or",
              },
              Object {
                "args": Array [
                  Object {
                    "args": Array [
                      Object {
                        "prim": "True",
                      },
                    ],
                    "prim": "Right",
                  },
                ],
                "prim": "Right",
              },
            ],
            "prim": "PUSH",
          },
          Object {
            "prim": "DROP",
          },
          Object {
            "prim": "CAR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals contract 1`] = `
Array [
  "storage unit;
parameter (contract int);
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "prim": "int",
            },
          ],
          "prim": "contract",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals contract 2`] = `
Array [
  "storage unit;
parameter (contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))));
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "args": Array [
                Object {
                  "args": Array [
                    Object {
                      "annots": Array [
                        "%request",
                      ],
                      "args": Array [
                        Object {
                          "annots": Array [
                            "%owner",
                          ],
                          "prim": "address",
                        },
                        Object {
                          "annots": Array [
                            "%token_id",
                          ],
                          "prim": "nat",
                        },
                      ],
                      "prim": "pair",
                    },
                    Object {
                      "annots": Array [
                        "%balance",
                      ],
                      "prim": "nat",
                    },
                  ],
                  "prim": "pair",
                },
              ],
              "prim": "list",
            },
          ],
          "prim": "contract",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals lambda 1`] = `
Array [
  "storage unit;
parameter (lambda bool chain_id);
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "prim": "bool",
            },
            Object {
              "prim": "chain_id",
            },
          ],
          "prim": "lambda",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals never 1`] = `
Array [
  "storage unit;
parameter never;
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "never",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals operation 1`] = `
Array [
  "storage unit;
parameter unit;
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals or (nested) 1`] = `
Array [
  "storage unit;
parameter (or nat (or bool chain_id));
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "prim": "nat",
            },
            Object {
              "args": Array [
                Object {
                  "prim": "bool",
                },
                Object {
                  "prim": "chain_id",
                },
              ],
              "prim": "or",
            },
          ],
          "prim": "or",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals or 1`] = `
Array [
  "storage unit;
parameter (or bytes unit);
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "prim": "bytes",
            },
            Object {
              "prim": "unit",
            },
          ],
          "prim": "or",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals sapling_state 1`] = `
Array [
  "storage unit;
parameter (sapling_state 1);
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "int": "1",
            },
          ],
          "prim": "sapling_state",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals sapling_transaction 1`] = `
Array [
  "storage unit;
parameter (sapling_transaction 1);
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "int": "1",
            },
          ],
          "prim": "sapling_transaction",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;

exports[`[E2E] - Michelson types with no literals ticket 1`] = `
Array [
  "storage unit;
parameter (ticket nat);
code {
  CDR;
  NIL operation;
  PAIR;
};",
  Array [
    Object {
      "args": Array [
        Object {
          "prim": "unit",
        },
      ],
      "prim": "storage",
    },
    Object {
      "args": Array [
        Object {
          "args": Array [
            Object {
              "prim": "nat",
            },
          ],
          "prim": "ticket",
        },
      ],
      "prim": "parameter",
    },
    Object {
      "args": Array [
        Array [
          Object {
            "prim": "CDR",
          },
          Object {
            "args": Array [
              Object {
                "prim": "operation",
              },
            ],
            "prim": "NIL",
          },
          Object {
            "prim": "PAIR",
          },
        ],
      ],
      "prim": "code",
    },
  ],
]
`;
